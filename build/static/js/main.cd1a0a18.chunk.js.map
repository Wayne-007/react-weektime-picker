{"version":3,"sources":["components/react-weektime-picker/index.module.scss","page/app/index.module.scss","components/react-weektime-picker/index.jsx","page/app/index.jsx","serviceWorker.js","index.js"],"names":["module","exports","hours","Index","props","weekTimesArr","i","DayTimes","push","copy_preViewIndex","useState","isMove","set_isMove","list","set_list","weekTimes","weekDays","timeTextList","set_timeTextList","startIndex","set_startIndex","axis","set_axis","preViewIndex","set_preViewIndex","showTimeText","set_showTimeText","value","values","set_values","tiptxt","index","timeIndex","showSelectTime","Array","isArray","weeksSelect","listlength","length","that_showTimeText","slice","forEach","item","getTimeText","resetMousemove","indexList","listLength","newData","that_list","splice","change_value","join","setSelectIndex","handleMousemove","event","target","getAttribute","Object","assign","endx","endy","res","newAxis","startx","Math","min","starty","max","y","x","getSelectIndex","arrIndex","timeLength","isSelect","timeText","initList","reg","RegExp","test","split","fill","useEffect","minutes","toString","hour","minute","initTimeText","document","addEventListener","className","styles","weektime","weektimeMain","weektimeHd","weektimeHdTitle","weektimeHdCon","weektimeHdConTop","weektimeDateRange","weektimeHdConBottom","map","weektimeDateCell","key","weektimeBd","weekBody","week","weekItem","timeBody","onMouseDown","that_startIndex","onMouseUp","onMouseMove","placement","title","data-index","timeCell","active","includes","preActive","weektimeHelp","weektimeHelpTx","weektimeHelpBd","colorBox","textBox","colorActive","weektimeHelpFt","onClick","weektimeHelpZelSct","style","display","weektimeHelpWeekTx","week_times","set_week_times","appBox","maxWidth","wordBreak","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cd1a0a18.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"weektime\":\"react-weektime-picker_weektime__wx6Eq\",\"weektimeMain\":\"react-weektime-picker_weektimeMain__3EvAO\",\"weektimeHd\":\"react-weektime-picker_weektimeHd__3O95f\",\"weektimeHdTitle\":\"react-weektime-picker_weektimeHdTitle__li5jV\",\"weektimeHdCon\":\"react-weektime-picker_weektimeHdCon__X8mz_\",\"weektimeHdConTop\":\"react-weektime-picker_weektimeHdConTop__3d4O4\",\"weektimeDateRange\":\"react-weektime-picker_weektimeDateRange__2b3Zg\",\"weektimeHdConBottom\":\"react-weektime-picker_weektimeHdConBottom__NLXiG\",\"weektimeDateCell\":\"react-weektime-picker_weektimeDateCell__agPvE\",\"weektimeBd\":\"react-weektime-picker_weektimeBd__3jZtw\",\"weekBody\":\"react-weektime-picker_weekBody__1c6jK\",\"weekItem\":\"react-weektime-picker_weekItem__3731s\",\"timeBody\":\"react-weektime-picker_timeBody__3_C80\",\"timeCell\":\"react-weektime-picker_timeCell__2ZGiR\",\"active\":\"react-weektime-picker_active__1RBk3\",\"preActive\":\"react-weektime-picker_preActive__3SgFM\",\"weektimeHelp\":\"react-weektime-picker_weektimeHelp__3It3M\",\"colorBox\":\"react-weektime-picker_colorBox__Cj1tP\",\"textBox\":\"react-weektime-picker_textBox__I_RBC\",\"weektimeHelpFt\":\"react-weektime-picker_weektimeHelpFt__3QtUy\",\"weektimeHelpTx\":\"react-weektime-picker_weektimeHelpTx__20ox4\",\"weektimeHelpWeekTx\":\"react-weektime-picker_weektimeHelpWeekTx__6mIsU\",\"weektimeHelpBd\":\"react-weektime-picker_weektimeHelpBd__dtt3B\",\"colorActive\":\"react-weektime-picker_colorActive__3OoH1\",\"timeArea\":\"react-weektime-picker_timeArea__N_EeB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appBox\":\"app_appBox__1y4FB\"};","import React, { useEffect, useState, useCallback } from 'react';\nimport { Tooltip } from 'antd';\nimport 'antd/dist/antd.css';\nimport styles from './index.module.scss';\n\nconst hours = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24];\n\nexport const Index = props => {\n    const DayTimes = 24 * 2;\n    const weekTimesArr = [];\n    for (let i = 0; i < DayTimes * 7; i++) {\n        weekTimesArr.push(i)\n    }\n    let copy_preViewIndex = [];\n\n    const [isMove, set_isMove] = useState(false);\n    const [list, set_list] = useState([]);\n    // eslint-disable-next-line\n    const [weekTimes, set_weekTimes] = useState(weekTimesArr);\n    // eslint-disable-next-line\n    const [weekDays, set_weekDays] = useState(['星期一', '星期二', '星期三', '星期四', '星期五', '星期六', '星期日']);\n    const [timeTextList, set_timeTextList] = useState([]); //显示的时间数组 [\"00:00\",\"00:30\",\"01:00\",...]\n    const [startIndex, set_startIndex] = useState(0);\n    const [axis, set_axis] = useState({});\n    const [preViewIndex, set_preViewIndex] = useState([]);\n    const [showTimeText, set_showTimeText] = useState([]);\n    const [values, set_values] = useState(props.value || '');\n\n    /**\n * 鼠标停留时提示当前时间段\n */\n    const tiptxt = index => {\n        let timeIndex = index % DayTimes;\n        let weekIndex = ~~(index / DayTimes);\n        return `${weekDays[weekIndex]} ${timeTextList[timeIndex]}~${timeTextList[timeIndex + 1]}`\n    }\n    /**\n * 初始化显示的时间数组\n * @return {Array} [\"00:00\",\"00:30\",\"01:00\",...]\n */\n    const initTimeText = () => {\n        let timeTextList = [], hours = [], minutes = ['00', '30'];\n        for (let i = 0; i <= 24; i++) {\n            i < 10 ? hours.push('0' + i) : hours.push(i.toString())\n        }\n        for (const hour of hours) {\n            for (const minute of minutes) {\n                timeTextList.push(`${hour}:${minute}`)\n            }\n        }\n        return timeTextList\n    }\n    /**\n * 获取拖动鼠标选择的index数组\n */\n    const getSelectIndex = () => {\n        let indexList = [],\n            newAxis = {\n                startx: Math.min(axis.startx, axis.endx),\n                starty: Math.min(axis.starty, axis.endy),\n                endx: Math.max(axis.startx, axis.endx),\n                endy: Math.max(axis.starty, axis.endy)\n            };\n        for (let y = newAxis.starty; y <= newAxis.endy; y++) {\n            for (let x = newAxis.startx; x <= newAxis.endx; x++) {\n                indexList.push(x + y * DayTimes)\n            }\n        }\n        return indexList\n    }\n    const handleMousedown = event => {\n        set_isMove(true);\n        const that_startIndex = event.target.getAttribute('data-index');\n        set_startIndex(that_startIndex)\n        set_axis(Object.assign(axis, { startx: that_startIndex % DayTimes, starty: ~~(that_startIndex / DayTimes) }))\n    }\n    /**\n* 展示选择的时间段\n* @param {Array} list 已选择的list数组\n*/\n    const showSelectTime = list => {\n        if (!Array.isArray(list)) return;\n        let weeksSelect = [], listlength = list.length;\n        // this.showTimeText = [];\n        const that_showTimeText = [];\n        set_showTimeText(that_showTimeText);\n        if (listlength === 0) return;\n        // 把 336长度的 list 分成 7 组，每组 48 个\n        for (let i = 0; i < listlength; i += DayTimes) {\n            weeksSelect.push(list.slice(i, i + DayTimes));\n        }\n        weeksSelect.forEach(item => {\n            that_showTimeText.push(getTimeText(item))\n        });\n        set_showTimeText(that_showTimeText);\n    }\n    /**\n* 设置选择的时间段并赋给绑定的值\n* @param {Array} indexList 选择的index数组\n*/\n    const setSelectIndex = indexList => {\n        if (!Array.isArray(indexList)) return;\n        const listLength = indexList.length;\n        const newData = list[startIndex] === '1' ? '0' : '1';\n        let that_list = list;\n        for (let i = 0; i < listLength; i++) {\n            set_list(that_list.splice(indexList[i], 1, newData));\n        }\n        props.change_value && props.change_value(that_list.join(''));\n        set_values(that_list.join(''));\n        showSelectTime(that_list);\n    }\n    const resetMousemove = () => {\n        if (!isMove) return;\n        // setSelectIndex(preViewIndex);\n        setSelectIndex(copy_preViewIndex);\n        set_isMove(false);\n        set_axis({});\n        copy_preViewIndex = [];\n        set_preViewIndex([]);\n    }\n    const handleMousemove = event => {\n        if (!isMove) return;\n        const index = event.target.getAttribute('data-index');\n        set_axis(Object.assign(axis, { endx: index % DayTimes, endy: ~~(index / DayTimes) }))\n        const res = getSelectIndex();\n        copy_preViewIndex = res;\n        set_preViewIndex(res);\n    }\n    const handleMouseup = event => {\n        handleMousemove(event);\n        resetMousemove();\n    }\n    const getTimeText = arrIndex => {\n        if (!Array.isArray(arrIndex)) return \"\";\n\n        /*方法一 matchAll 正则匹配 （速度较慢） */\n        // let strIndex = arrIndex.join('');\n        // let arrMatches = Array.from(strIndex.matchAll(/1+/g));\n        // let timeText = \"\";\n        // arrMatches.forEach(value => {\n        //   timeText += this.timeTextList[value.index];\n        //   timeText += '~' + this.timeTextList[value.index + value[0].length] + '、';\n        // })\n        /*方法一 end */\n\n        /**方法二 循环 （速度是方法一的十倍+）*/\n        let timeLength = arrIndex.length,\n            isSelect = false,\n            timeText = \"\";\n        arrIndex.forEach((value, index) => {\n            if (value === '1') {\n                if (!isSelect) {\n                    timeText += timeTextList[index]\n                    isSelect = true;\n                }\n                if (index === timeLength - 1) timeText += '~' + timeTextList[index + 1] + '、';\n            } else {\n                if (isSelect) {\n                    timeText += '~' + timeTextList[index] + '、'\n                    isSelect = false;\n                }\n            }\n        })\n        /*方法二 end */\n\n        return timeText.slice(0, -1)\n    }\n\n\n\n\n\n    const initList = value => {\n        let reg = new RegExp(\"^[01]{\" + weekTimes.length + \"}$\");\n        let that_list = list;\n        if (value && reg.test(value)) {\n            that_list = value.split('');\n            set_list(that_list);\n            return showSelectTime(that_list);\n        }\n        that_list = new Array(weekTimes.length).fill('0');\n        set_list(that_list);\n        props.change_value && props.change_value(that_list.join(''));\n        set_values(that_list.join(''));\n        showSelectTime(that_list);\n    }\n    // eslint-disable-next-line\n    useEffect(() => {\n        set_timeTextList(initTimeText());\n        document.addEventListener('mouseup', resetMousemove);\n        initList(values)\n    }, [])\n    // eslint-disable-next-line\n    useEffect(() => {\n        // split() 方法用于把一个字符串分割成字符串数组。\n        // join() 方法用于把数组中的所有元素放入一个字符串。\n        if (values.split('') === list.join('')) return;\n        initList(values);\n    }, [values])\n\n    return (\n        <div className={styles.weektime}>\n            <div className={styles.weektimeMain}>\n                <div className={styles.weektimeHd}>\n                    <div className={styles.weektimeHdTitle}>星期\\时间</div>\n                    <div className={styles.weektimeHdCon}>\n                        <div className={styles.weektimeHdConTop}>\n                            <div className={styles.weektimeDateRange}>00:00 - 12:00</div>\n                            <div className={styles.weektimeDateRange}>12:00 - 24:00</div>\n                        </div>\n                        <div className={styles.weektimeHdConBottom}>\n                            {hours.map(item => {\n                                return (<span className={styles.weektimeDateCell} key={item}>{item - 1}</span>);\n                            })\n                            }\n                        </div>\n                    </div>\n                </div>\n                <div className={styles.weektimeBd}>\n                    <div className={styles.weekBody}>\n                        {\n                            weekDays.map(week => {\n                                return (<div key={week} className={styles.weekItem}>{week}</div>);\n                            })\n                        }\n                    </div>\n                    <div className={styles.timeBody} onMouseDown={handleMousedown} onMouseUp={handleMouseup} onMouseMove={handleMousemove}>\n                        {\n                            // 全部小方块\n                            weekTimes.map((i, key) => {\n                                return (\n                                    <Tooltip placement=\"top\" key={key} title={tiptxt(key)}>\n                                        <div\n                                            data-index={key}\n                                            className={`${styles.timeCell} ${values.split('')[key] === '1' ? styles.active : ''} ${preViewIndex.includes(key) || copy_preViewIndex.includes(key) ? styles.preActive : ''}`}\n                                        >\n                                        </div>\n                                    </Tooltip>\n                                );\n                            })\n                        }\n                    </div >\n                </div >\n            </div >\n            <div className={styles.weektimeHelp}>\n                <div className={styles.weektimeHelpTx}>\n                    <div className={styles.weektimeHelpBd}>\n                        <span className={styles.colorBox}></span>\n                        <span className={styles.textBox}>未选</span>\n                        <span className={`${styles.colorBox} ${styles.colorActive}`}></span>\n                        <span className={styles.textBox}>已选</span>\n                    </div>\n                    <div className={styles.weektimeHelpFt} onClick={initList}>清空选择</div>\n                </div>\n                <div className={styles.weektimeHelpZelSct}>\n                    {\n                        weekDays.map((week, key) => {\n                            return (\n                                <p key={key} style={showTimeText[key] ? {} : { display: 'none' }}>\n                                    <span className={styles.weektimeHelpWeekTx}>{week + \"：\"}</span>\n                                    <span>{showTimeText[key]}</span>\n                                </p>\n                            );\n                        })\n                    }\n                </div >\n            </div >\n        </div >\n    );\n}\n\nexport default Index;\n","import React, { useState } from 'react';\nimport ReactWeektimePicker from '../../components/react-weektime-picker';\nimport styles from './index.module.scss';\n\nconst Index = props => {\n    const [week_times, set_week_times] = useState('');\n    const change_week_times = value => set_week_times(value);\n\n    return (<div className={styles.appBox}>\n        <ReactWeektimePicker\n            change_value={\n                change_week_times\n            }\n            value={\n                week_times\n            }\n        />\n        <p style={{ maxWidth: '658px', wordBreak: 'break-all' }}>{week_times}</p>\n    </div>);\n}\n\nexport default Index;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './page/app';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render( <\n  React.StrictMode >\n  <\n  App / >\n  <\n  /\n  React.StrictMode > ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}